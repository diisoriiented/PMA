1. Lab01-01.exe: Yes, matches virus signatures on 29/55 antivirus websites
   Lab01-02.exe: Yes, matches virus signatures on 35/55 antivirus websites
   Lab01-03.exe: Yes, matches virus signatures on 49/55 antivirus websites
   Lab01-04.exe: Yes, matches virus signatures on 47/55 antivirus websites

   Lab01.01.dll: Yes, matches virus signautes on 25/55 antivirus websites

2. Lab01-01.exe: Compiled on 12/19/10 at 4:16
   Lab01-02.exe: Compiled on 1/19/11 at 4:10
   Lab01-03.exe: Compiled on N/A
   Lab01-04.exe: Compiled on 8/30/19 -- In the future

   Lab01-01.dll: Compiled on 12/19/10 4:16

3. Lab		Name	Virtual Size	Raw Data Size	
   Lab01-01.exe .text	0970		1000		 
   		.rdata	02B2		1000		Prediction: Not Packed
		.data	00FC		1000
   
   Lab01-01.dll .text   039E		1000
    		.rdata 	23FC6		24000		Prediction: Not Packed
		.data	006C		1000
		.reloc	0204		1000

   Lab01-02.exe UPX0  	4000		0400
		UPX1	1000		0600		Prediction: Packed
		UPX2	1000            0200		

   Lab01-03.exe ____	3000		0000
		____	1000		028C		Prediction: Packed
		____	1000		0200	

   Lab01-04.exe .text	0720		1000
		.rdata	03D2		1000
		.data	014C		1000		Prediction: Not Packed
		.rsrc	4060		5000

4. Lab01-01.exe:
   
   Kernel32.dll			
   -----------------------------------------------------------------------------
   CloseHandle - 			
   CopyFileA   - Makes a copy of a file.	
   CreateFileA - Creates or opens an existing file
   CreateFileMappingA - Creates a handle to a file mapping that loads a file 
			into memory and makes it accessible via memory address.
   FindClose  
   FindFirstFileA - Used to search through a directory and enumerate a filesystem.
   IsBadReadPtr - Verifies that the calling process has read access to a range of mem.
   MapViewOfFile - Maps a file into memory and makes the contents of the file 
		   accessible via memory address. By using this, malware can avoid
		   using WriteFile to modify contents of a file.	

   Guess: From these imports, I am guessing that this piece of malware is either a 
	  launcher, or an injector. It can be seen through the imports, that this 
      	  code opens and creates files, as well as uses mappings to modify files that
 	  already exist. Using MapViewOfFile, it looks as if it is trying to hide the
   	  modification of the file its writing to.

************************************************************************************** 
  
   Lab01-01.dll

   Kernel32.dll
-------------------------------------------------------------------------------------
   CloseHandle			
   CreateMutex
   CreateProcess
   OpenMutex
   Sleep

   Libraries to note: 

   CreateMutex - Creates a mutual exclusion object that can be used by malware to 
		 ensure that only a single instance of malware is running on a system
		 at any given time. Malware often uses fixed names for mutexes which
		 can be good host-based indicators to detect additional installations
		 of malware.
   CreateProcess
   OpenMutex   - Opens a handle to a Mutex object that can ensure only a single instance
		 of malware is running on a system at any given time.
   Sleep       - Specifies the amount of time for which execution is to be suspended.

   Guess: From what I can see, this piece of malware will try to suspend execution of
	  all processes on a machine by opening a Mutex and calling Sleep. In addition
	  the WS2_32.dll file imports networking functions by ordinal to mask their
	  names. It can be seen from these functions that the malware is connecting
          to some port and sending data to it.

   Lab01-02.exe:

   Kernel32.dll			Advapi32.dll		WININET.dll
   _____________________________________________________________________________

   LoadLibrary			CreateService		InternetOpen	
   GetProcAddress
   VirtualProtect
   VirtualAlloc
   VirtualFree
   ExitProcess
   
   Libraries of Note:
 
   LoadLibrary    - Loads a DLL into a process that wasn't originally loaded into the
 		    Program at runtime
   GetProcAddress - Retrieves the address of a function in another DLL not loaded into
		    the program. 
   VirtualProtect - Changes the protection on a region of memory. Malware may use this
  		    to change a read-only section of memory to an executable
   VirtualAlloc   - Memory allocation that can allocate memory in a remote process
   InternetOpen   - Initializes high-level internet access functions

   Guess: According to sources, recursive imports are normal, as other dll files might 
	  need to import other dll functions. However, from the top level imports it 
	  is hard to say what this malware does (because it is packed probably). We
	  can see that this piece of malware creates a service, which will most likely
	  run in the background of the victim's computer. Secondly, we can see that
	  it is importing VirtualProtect, which changes the protection of a piece of
	  memory. This could be deadly as it could change permissions on a read-only
	  file or executable. Finally, we see that it imports the InternetOpen 
	  functions, which could be used for internet access. Overall, it is pretty
	  tough to see what this is doing, but we know that it most likely involves
	  creating a service, the internet, and changing permissions of files.

*************************************************************************************

   Lab01-03.exe

   Libraries of note:

   LoadLibrary
   GetProcAddress

   Guess: Nothing. The malware is packed and give little to no indication of what is 
          going on here.

*************************************************************************************

   Lab01-04.exe

   Kernel32.dll			Advapi32.dll
___________________________________________________________________________________
   CloseHandle			AdjustTokenPriviledges
   CreateFile			LookupPriviledgeValue
   CreateRemoteThread		OpenProcessToken
   FindResource
   GetCurrentProcess
   GetModuleHandle
   GetProcAddress
   GetTempPath
   GetWindowsDirectory
   LoadLibrary
   LoadResource
   MoveFile
   OpenProcess
   SizeofResource
   WinExec
   WriteFile
   
   Libaries of note:

   CreateFile         - Creates a file
   CreateRemoteThread - Creates and launches a new process. Launches and stealthware
		        use this to inject code into a different process.
   FindResource	      - Used to find a resource in an executable or loaded DLL. Malware
			sometimes uses resources to store strings, configuration info.
 			or other malicious files.
   GetModuleHandle    - Used to obtain a handle to an already loaded module. Malware may
			use this to locate and modify code in a loaded module or to 
			search for a good location to inject code
   GetProcAddress     -	Used to get the address of a function in another dll
   GetTempPath	      - Returns the temporary file path.
   GetWindowsDirectory- Returns the file path to the Windows directory. Malware 
			sometimes calls this to determine where to install additional
			malicious files
   LoadResource       - Loads a resource from a PE file into memory.
   MoveFile	      - Moves a file
   OpenProcess	      - Opens a handle to another process running on the system. 
			This handle can be used to read and write to the other process
			memory or to inject code into otger process.
   WinExe	      - Used to execute another program. 
   AdjustTokenPriviledges - Used to enable or disable specific access priveledges. 
 
   Guess: A lot of these imported modules have to do with code injection. So my guess
	  is that this piece of malware does something like that. It can also be seen
	  that this piece of malware calls priviledge functions, and also WinExe which
	  allows for program execution. Additionally, it looks like it loads functions
	  to look at the Windows directory, and the temp directory, and the creation
	  of files. Overall, there is a lot going on and it is hard to say what it does. 
************************************************************************************* 

OOPS - I was only suppsoed to look at Lab01-01.exe and Lab01-01.dll!!!!

5. Lab01-01.exe: Since the malware looks to be making copies of files, without a rename
  		 looking function, a host based indicator could be the same file found
  		 throughout the system.
   Lab01-01.dll: This file appears to use Mutex's to suspend execution of files. Since
		 mutex names are generally constant, the name of the mutex could be
		 searched for which would indicate an infected host.
   
6. Lab01-01.exe  None - no networking functionality.
   Lab01-01.dll  Upon inspection, it can be seen that the malware is using socket fns
		 to connect to a port at some internet address. This is clearly a 
		 network based indicator, and given the likelyhood of this inet addr and
		 port being constant values in the malware, this can be searched for
		 to identify infected hosts.

7. Lab01-01.exe - Guess Purpose: My guess is that this malware modifies the contents of
				 specific files without the users knowledge. Why? That
				 is clearly unknown, but it doesn't look as if there is
				 any stealing of information, or installation of other
			 	 malware through it's library calls.
  
   Lab01-01.dll - Guess Purpose: My guess is that this piece of malware is designed to
				 steal information. Networking libraries are imported
				 and the computer being used has it's processes 
				 suspended by the Sleep function call.
